================================================================================
                        SmartFusion2 eNVM write example
================================================================================

This example project demonstrates the use of the SmartFusion2 eNVM driver. This
example project writes an alternating pattern into eNVM based on the original
content of the eNVM. This allows seeing the eNVM content change every time this
example is executed.

--------------------------------------------------------------------------------
                            How to use this example
--------------------------------------------------------------------------------
This example project demonstrates the use of the SmartFusion2 eNVM driver by
programming various byte patterns into eNVM. This test project is intented to
be stepped through using a debugger to observe the changes of content of the
eNVM in address range 0x60001000 to 0x60001200 as the program executes. The
patterns written to NVM depend on the original content of the eNVM. Each
successive run of this program will produce an observable change in the content
of the eNVM.

--------------------------------------------------------------------------------
                                Target hardware
--------------------------------------------------------------------------------
This example project is targeted at any SmartFusion2 design where the eNVM is
enabled.

--------------------------------------------------------------------------------
                          Silicon revision dependencies
--------------------------------------------------------------------------------
This example is built to execute on an M2S090T die. You will need to overwrite
this example project's "drivers_config/sys_config" and "CMSIS" folders with the
one generated by Libero for your hardware design if using a newer silicon revision.
The "drivers_config/sys_config" folder contains information about your hardware
design. This information is used by the CMSIS to initialize clock frequencies.
The CMSIS boot code may also complete the device's clock configuration
depending on silicon version. The "CMSIS" and "drivers_config/sys_config" for
your design can be found in the "firmware" folder of your Libero design.

