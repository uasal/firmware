<?xml version="1.0"?>
<analyzerinfo checksum="1939027695">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;buildNumber&apos; can be reduced." verbose="The scope of the variable &apos;buildNumber&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="/home/summer/projects/CGraph/firmware/include/buildtracer/qmain.cpp">
            <location file="/home/summer/projects/CGraph/firmware/include/buildtracer/qmain.cpp" line="63" column="7"/>
            <symbol>buildNumber</symbol>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &apos;argv&apos; can be declared with const" verbose="Parameter &apos;argv&apos; can be declared with const" cwe="398" file0="/home/summer/projects/CGraph/firmware/include/buildtracer/qmain.cpp">
            <location file="/home/summer/projects/CGraph/firmware/include/buildtracer/qmain.cpp" line="50" column="27" info="Parameter &apos;argv&apos; can be declared with const"/>
            <symbol>argv</symbol>
        </error>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="main" lineNumber="50"/>
    <functioncall functionName="INT_MAX"/>
    <functioncall functionName="In"/>
    <functioncall functionName="c_str"/>
    <functioncall functionName="close"/>
    <functioncall functionName="if"/>
    <functioncall functionName="ignore"/>
    <functioncall functionName="strlen"/>
  </FileInfo>
</analyzerinfo>
