<?xml version="1.0"?>
<analyzerinfo checksum="2703097197">
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;colon_p&apos; can be reduced." verbose="The scope of the variable &apos;colon_p&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c">
            <location file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="114" column="9"/>
            <symbol>colon_p</symbol>
        </error>
  <FileInfo check="ctu">
<function-call call-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c:75:13" call-funcname="hex_to_long" call-argnr="1" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="116" col="3" my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.h:33:6" my-argnr="1"/>
  </FileInfo>
  <FileInfo check="Null pointer">
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c:75:13" my-argnr="1" my-argname="str" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="80" col="11" value="0"/>
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.h:40:6" my-argnr="1" my-argname="start_all" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="134" col="20" value="0"/>
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.h:49:6" my-argnr="1" my-argname="env_str" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="197" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="Uninitialized variables">
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c:75:13" my-argnr="1" my-argname="str" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="80" col="11" value="0"/>
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.h:40:6" my-argnr="1" my-argname="start_all" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="134" col="20" value="0"/>
    <unsafe-usage my-id="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.h:49:6" my-argnr="1" my-argname="env_str" file="/home/summer/projects/CGraph/firmware/include/dbg/dmalloc-5.5.2/env.c" line="197" col="22" value="0"/>
  </FileInfo>
  <FileInfo check="CheckUnusedFunctions">
    <functiondecl functionName="hex_to_long" lineNumber="75"/>
    <functiondecl functionName="_dmalloc_address_break" lineNumber="111"/>
    <functiondecl functionName="_dmalloc_start_break" lineNumber="128"/>
    <functiondecl functionName="_dmalloc_environ_process" lineNumber="168"/>
    <functiondecl functionName="_dmalloc_environ_set" lineNumber="314"/>
    <functioncall functionName="_dmalloc_address_break"/>
    <functioncall functionName="_dmalloc_start_break"/>
    <functioncall functionName="addr_all"/>
    <functioncall functionName="addr_count"/>
    <functioncall functionName="addr_count_p"/>
    <functioncall functionName="addr_p"/>
    <functioncall functionName="address"/>
    <functioncall functionName="at_string"/>
    <functioncall functionName="at_value"/>
    <functioncall functionName="atoi"/>
    <functioncall functionName="attributes"/>
    <functioncall functionName="break"/>
    <functioncall functionName="buf"/>
    <functioncall functionName="buf_p"/>
    <functioncall functionName="buf_size"/>
    <functioncall functionName="continue"/>
    <functioncall functionName="debug"/>
    <functioncall functionName="debug_p"/>
    <functioncall functionName="done_b"/>
    <functioncall functionName="env_p"/>
    <functioncall functionName="env_str"/>
    <functioncall functionName="flags"/>
    <functioncall functionName="for"/>
    <functioncall functionName="hex_to_long"/>
    <functioncall functionName="if"/>
    <functioncall functionName="interval"/>
    <functioncall functionName="interval_p"/>
    <functioncall functionName="len"/>
    <functioncall functionName="limit_p"/>
    <functioncall functionName="limit_val"/>
    <functioncall functionName="loc_atoul"/>
    <functioncall functionName="loc_snprintf"/>
    <functioncall functionName="lock_on"/>
    <functioncall functionName="lock_on_p"/>
    <functioncall functionName="log_path"/>
    <functioncall functionName="logpath"/>
    <functioncall functionName="logpath_p"/>
    <functioncall functionName="long"/>
    <functioncall functionName="long_tokens_b"/>
    <functioncall functionName="sizeof"/>
    <functioncall functionName="start_all"/>
    <functioncall functionName="start_file"/>
    <functioncall functionName="start_file_p"/>
    <functioncall functionName="start_iter"/>
    <functioncall functionName="start_iter_p"/>
    <functioncall functionName="start_line"/>
    <functioncall functionName="start_line_p"/>
    <functioncall functionName="start_size"/>
    <functioncall functionName="start_size_p"/>
    <functioncall functionName="strchr"/>
    <functioncall functionName="strcmp"/>
    <functioncall functionName="strlen"/>
    <functioncall functionName="strncmp"/>
    <functioncall functionName="strncpy"/>
    <functioncall functionName="this_p"/>
    <functioncall functionName="void"/>
    <functioncall functionName="while"/>
  </FileInfo>
</analyzerinfo>
