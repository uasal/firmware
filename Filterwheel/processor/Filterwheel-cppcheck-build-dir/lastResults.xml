<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="2.7"/>
    <errors>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;BinaryUart::RxBuffer&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;BinaryUart::RxBuffer&amp;#039; is not initialized in the constructor." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/BinaryUart.hpp" line="82"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;Process&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;Process&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/BinaryUart.hpp" line="122" info="Function in derived class"/>
            <location file="../../include/uart/IUartParser.hpp" line="42" info="Virtual function in base class"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;PacketEnd&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;PacketEnd&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/BinaryUart.hpp" line="144"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;TerminalUart &amp;lt; 16 , 4096 &amp;gt;::RxBuffer&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;TerminalUart &amp;lt; 16 , 4096 &amp;gt;::RxBuffer&amp;#039; is not initialized in the constructor." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/TerminalUart.hpp" line="90"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;Process&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;Process&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/TerminalUart.hpp" line="276" info="Function in derived class"/>
            <location file="../../include/uart/IUartParser.hpp" line="42" info="Virtual function in base class"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/TerminalUart.hpp" line="219"/>
        </error>
        <error id="uninitMemberVar" severity="warning" msg="Member variable &amp;#039;fixedqueue &amp;lt; char , 16 &amp;gt;::data&amp;#039; is not initialized in the constructor." verbose="Member variable &amp;#039;fixedqueue &amp;lt; char , 16 &amp;gt;::data&amp;#039; is not initialized in the constructor." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/fixedqueue.hpp" line="51"/>
        </error>
        <error id="noExplicitConstructor" severity="style" msg="Struct &amp;#039;ads1258 &amp;lt; PinoutMonitorAdc &amp;gt;&amp;#039; has a constructor with 1 argument that is not explicit." verbose="Struct &amp;#039;ads1258 &amp;lt; PinoutMonitorAdc &amp;gt;&amp;#039; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="297"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;val&amp;#039; can be declared with const" verbose="Parameter &amp;#039;val&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="85"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;rhs&amp;#039; can be declared with const" verbose="Parameter &amp;#039;rhs&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="129"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;rhs&amp;#039; can be declared with const" verbose="Parameter &amp;#039;rhs&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="155"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;rhs&amp;#039; can be declared with const" verbose="Parameter &amp;#039;rhs&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="181"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;rhs&amp;#039; can be declared with const" verbose="Parameter &amp;#039;rhs&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="205"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;rhs&amp;#039; can be declared with const" verbose="Parameter &amp;#039;rhs&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="235"/>
        </error>
        <error id="shiftTooManyBits" severity="error" msg="Shifting 64-bit value by 4294967295 bits is undefined behaviour" verbose="Shifting 64-bit value by 4294967295 bits is undefined behaviour" cwe="758" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/adc/ads1258.h" line="395" info="Shift"/>
            <location file="../../include/adc/ads1258.h" line="392" info="Safe checks: Assuming argument has value 4294967295"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;FindPacketStart&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;FindPacketStart&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="61" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="37" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;FindPacketEnd&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;FindPacketEnd&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="67" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="38" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;HeaderLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;HeaderLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="73" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="39" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;FooterLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;FooterLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="74" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="40" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;PayloadOffset&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;PayloadOffset&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="75" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="41" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;MaxPayloadLength&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;MaxPayloadLength&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="76" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="42" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;IsBroadcastSerialNum&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;IsBroadcastSerialNum&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="77" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="45" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;SerialNum&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;SerialNum&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="78" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="46" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;PayloadLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;PayloadLen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="80" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="43" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;PayloadType&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;PayloadType&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="87" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="47" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;DoesPayloadTypeMatch&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;DoesPayloadTypeMatch&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="94" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="48" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;IsValid&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;IsValid&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="104" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="44" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;MakePacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;MakePacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphPacket.hpp" line="117" info="Function in derived class"/>
            <location file="../../include/uart/IPacket.hpp" line="49" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;dataready&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;dataready&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="57" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="52" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;getcqq&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;getcqq&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="63" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;putcqq&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;putcqq&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="73" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="54" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;flushoutput&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;flushoutput&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="87" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="55" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;purgeinput&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;purgeinput&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="88" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="56" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;isopen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;isopen&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="../../include/uart/uart_pinout_fpga.hpp" line="90" info="Function in derived class"/>
            <location file="../../include/uart/IUart.h" line="57" info="Virtual function in base class"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;OnOff&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;OnOff&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="CmdHandlersAscii.cpp" line="414"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;Buffer&amp;#039; can be declared with const" verbose="Parameter &amp;#039;Buffer&amp;#039; can be declared with const" cwe="398" file0="CmdHandlersAscii.cpp" sinceDate="11/14/24">
            <location file="MonitorAdc.hpp" line="345"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="CmdHandlersBinary.cpp" sinceDate="11/14/24">
            <location file="CmdHandlersBinary.cpp" line="67"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="CmdHandlersBinary.cpp" sinceDate="11/14/24">
            <location file="CmdHandlersBinary.cpp" line="91"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="Filterwheel.cpp" sinceDate="11/14/24">
            <location file="Filterwheel.cpp" line="108" info="FW-&amp;gt;ControlRegister is overwritten"/>
            <location file="Filterwheel.cpp" line="106" info="FW-&amp;gt;ControlRegister is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="Filterwheel.cpp" sinceDate="11/14/24">
            <location file="Filterwheel.cpp" line="159" info="FW-&amp;gt;ControlRegister is overwritten"/>
            <location file="Filterwheel.cpp" line="157" info="FW-&amp;gt;ControlRegister is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;FW-&amp;gt;ControlRegister&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="Main.cpp" sinceDate="11/14/24">
            <location file="Main.cpp" line="113" info="FW-&amp;gt;ControlRegister is overwritten"/>
            <location file="Main.cpp" line="111" info="FW-&amp;gt;ControlRegister is assigned"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;cycle&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;cycle&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="MonitorAdc.cpp" sinceDate="11/14/24">
            <location file="MonitorAdc.cpp" line="86"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;cycle&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;cycle&amp;#039; is assigned a value that is never used." cwe="563" file0="MonitorAdc.cpp" sinceDate="11/14/24">
            <location file="MonitorAdc.cpp" line="90"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;InvalidPacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;InvalidPacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="Uarts.cpp" sinceDate="11/14/24">
            <location file="Uarts.cpp" line="47" info="Function in derived class"/>
            <location file="../../include/uart/BinaryUart.hpp" line="50" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;UnHandledPacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;UnHandledPacket&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="Uarts.cpp" sinceDate="11/14/24">
            <location file="Uarts.cpp" line="59" info="Function in derived class"/>
            <location file="../../include/uart/BinaryUart.hpp" line="53" info="Virtual function in base class"/>
        </error>
        <error id="missingOverride" severity="style" msg="The function &amp;#039;BufferOverflow&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." verbose="The function &amp;#039;BufferOverflow&amp;#039; overrides a function in a base class but is not marked with a &amp;#039;override&amp;#039; specifier." file0="Uarts.cpp" sinceDate="11/14/24">
            <location file="Uarts.cpp" line="73" info="Function in derived class"/>
            <location file="../../include/uart/BinaryUart.hpp" line="59" info="Virtual function in base class"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from const double * to const unsigned int * is not portable due to different binary data representations on different platforms." verbose="Casting from const double * to const unsigned int * is not portable due to different binary data representations on different platforms." cwe="704" file0="../../include/stdintle.cpp" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="115"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting from double * to unsigned int * is not portable due to different binary data representations on different platforms." verbose="Casting from double * to unsigned int * is not portable due to different binary data representations on different platforms." cwe="704" file0="../../include/stdintle.cpp" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="116"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_double&amp;#039; is never used." verbose="The function &amp;#039;endianswap_double&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="80"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_double_arm7&amp;#039; is never used." verbose="The function &amp;#039;endianswap_double_arm7&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="96"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_doublehalves_arm7&amp;#039; is never used." verbose="The function &amp;#039;endianswap_doublehalves_arm7&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="112"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_float&amp;#039; is never used." verbose="The function &amp;#039;endianswap_float&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="68"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_uint16_t&amp;#039; is never used." verbose="The function &amp;#039;endianswap_uint16_t&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_uint32_t&amp;#039; is never used." verbose="The function &amp;#039;endianswap_uint32_t&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="40"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;endianswap_uint64_t&amp;#039; is never used." verbose="The function &amp;#039;endianswap_uint64_t&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/stdintle.cpp" line="52"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/arm/LinuxUtils.cpp" sinceDate="11/14/24">
            <location file="../../include/arm/LinuxUtils.cpp" line="47"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;CreateTempFolder&amp;#039; is never used." verbose="The function &amp;#039;CreateTempFolder&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/LinuxUtils.cpp" line="10"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;ShowCallStack&amp;#039; is never used." verbose="The function &amp;#039;ShowCallStack&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/LinuxUtils.cpp" line="39"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;spawn&amp;#039; is never used." verbose="The function &amp;#039;spawn&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/LinuxUtils.cpp" line="25"/>
        </error>
        <error id="unusedStructMember" severity="style" msg="struct member &amp;#039;EIM_EAR::error_addr&amp;#039; is never used." verbose="struct member &amp;#039;EIM_EAR::error_addr&amp;#039; is never used." cwe="563" file0="../../include/arm/imx6/imx6-eim.cpp" sinceDate="11/14/24">
            <location file="../../include/arm/imx6/imx6-eim.cpp" line="217"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;eim_setup&amp;#039; is never used." verbose="The function &amp;#039;eim_setup&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/imx6/imx6-eim.cpp" line="320"/>
        </error>
        <error id="nullPointer" severity="error" msg="Null pointer dereference: boot" verbose="Null pointer dereference: boot" cwe="476" file0="../../include/arm/smartfusion/HardFaultHandler.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/HardFaultHandler.c" line="60" info="Null pointer dereference"/>
            <location file="../../include/arm/smartfusion/HardFaultHandler.c" line="59" info="Assignment &amp;#039;boot=0&amp;#039;, assigned value is 0"/>
        </error>
        <error id="nullPointer" severity="error" msg="Null pointer dereference: boot" verbose="Null pointer dereference: boot" cwe="476" file0="../../include/arm/smartfusion/HardFaultHandler.cpp" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/HardFaultHandler.cpp" line="84" info="Null pointer dereference"/>
            <location file="../../include/arm/smartfusion/HardFaultHandler.cpp" line="83" info="Assignment &amp;#039;boot=0&amp;#039;, assigned value is 0"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;hard_fault_handler_c&amp;#039; is never used." verbose="The function &amp;#039;hard_fault_handler_c&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/HardFaultHandler.cpp" line="20"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;divisor[var]&amp;gt;5&amp;#039; is always false" verbose="Condition &amp;#039;divisor[var]&amp;gt;5&amp;#039; is always false" cwe="570" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="561" info="Condition &amp;#039;divisor[var]&amp;gt;5&amp;#039; is always false"/>
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="561" info="Assuming that condition &amp;#039;divisor[var]!=divisor[0]&amp;#039; is not redundant"/>
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="561" info="Assuming that condition &amp;#039;divisor[0]&amp;gt;5&amp;#039; is not redundant"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &amp;#039;pp_key!=NULL&amp;#039; is redundant or there is possible null pointer dereference: pp_key." verbose="Either the condition &amp;#039;pp_key!=NULL&amp;#039; is redundant or there is possible null pointer dereference: pp_key." cwe="476" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1807" info="Null pointer dereference"/>
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1815" info="Assuming that condition &amp;#039;pp_key!=NULL&amp;#039; is not redundant"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="661"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;flash_freeze_req&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;flash_freeze_req&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="662"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;running_on_standby_clock&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;running_on_standby_clock&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1235"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;timeout&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;timeout&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1236"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;isp_prog_request&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;isp_prog_request&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1292"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1386"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;iap_prog_req&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;iap_prog_req&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1387"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;actual_response_length&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1502"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;digest_check_req&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;digest_check_req&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1503"/>
        </error>
        <error id="redundantPointerOp" severity="style" msg="Redundant pointer operation on &amp;#039;pp_key&amp;#039; - it&amp;#039;s already a pointer." verbose="Redundant pointer operation on &amp;#039;pp_key&amp;#039; - it&amp;#039;s already a pointer." cwe="398" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1817"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;var&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;var&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="464"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;temp&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;temp&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="465"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;var&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;var&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="588"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;temp&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;temp&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/arm/smartfusion/mss_sys_services.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="589"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_128bit_aes&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_128bit_aes&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="741"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_256bit_aes&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_256bit_aes&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="776"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_challenge_response&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_challenge_response&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="911"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_clear_lock_parity&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_clear_lock_parity&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2245"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_clear_mesh_short&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_clear_mesh_short&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2294"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_disable_puf_power_down&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_disable_puf_power_down&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2196"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_ecc_get_base_point&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_ecc_get_base_point&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2024"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_ecc_point_addition&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_ecc_point_addition&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1989"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_ecc_point_multiplication&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_ecc_point_multiplication&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1954"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_enable_puf_power_down&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_enable_puf_power_down&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2147"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_flash_freeze&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_flash_freeze&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="657"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_get_design_version&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_get_design_version&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="313"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_get_device_certificate&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_get_device_certificate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="332"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_get_secondary_device_certificate&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_get_secondary_device_certificate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="351"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_get_serial_number&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_get_serial_number&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="275"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_get_user_code&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_get_user_code&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="294"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_hmac&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_hmac&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="842"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_init&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_init&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="164"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_initiate_iap&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_initiate_iap&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1378"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_key_tree&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_key_tree&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="878"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_generate&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_generate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1052"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_instantiate&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_instantiate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1019"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_reseed&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_reseed&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1085"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_reset&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_reset&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="942"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_self_test&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_self_test&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="982"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_nrbg_uninstantiate&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_nrbg_uninstantiate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1112"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_create_activation_code&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_create_activation_code&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1575"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_delete_activation_code&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_delete_activation_code&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1616"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_delete_key&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_delete_key&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1746"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_enroll_key&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_enroll_key&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1689"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_export_keycodes&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_export_keycodes&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1826"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_fetch_ecc_public_key&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_fetch_ecc_public_key&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1892"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_fetch_key&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_fetch_key&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1788"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_get_random_seed&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_get_random_seed&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1923"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_puf_import_keycodes&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_puf_import_keycodes&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1859"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_sha256&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_sha256&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="812"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_start_clock_monitor&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_start_clock_monitor&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2047"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_start_isp&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_start_isp&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1285"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_stop_clock_monitor&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_stop_clock_monitor&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="2097"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;MSS_SYS_zeroize_device&amp;#039; is never used." verbose="The function &amp;#039;MSS_SYS_zeroize_device&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_sys_services.c" line="1153"/>
        </error>
        <error id="constVariable" severity="style" msg="Variable &amp;#039;stack_ptr&amp;#039; can be declared with const" verbose="Variable &amp;#039;stack_ptr&amp;#039; can be declared with const" cwe="398" file0="../../include/arm/smartfusion/newlib_stubs.c" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="219"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_close&amp;#039; is never used." verbose="The function &amp;#039;_close&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="72"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_execve&amp;#039; is never used." verbose="The function &amp;#039;_execve&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="80"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_fork&amp;#039; is never used." verbose="The function &amp;#039;_fork&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="101"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_fstat&amp;#039; is never used." verbose="The function &amp;#039;_fstat&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="110"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_getpid&amp;#039; is never used." verbose="The function &amp;#039;_getpid&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="119"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_isatty&amp;#039; is never used." verbose="The function &amp;#039;_isatty&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="127"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_kill&amp;#039; is never used." verbose="The function &amp;#039;_kill&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="135"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_link&amp;#039; is never used." verbose="The function &amp;#039;_link&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="144"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_lseek&amp;#039; is never used." verbose="The function &amp;#039;_lseek&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="153"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_open&amp;#039; is never used." verbose="The function &amp;#039;_open&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="161"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_read&amp;#039; is never used." verbose="The function &amp;#039;_read&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="169"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_sbrk&amp;#039; is never used." verbose="The function &amp;#039;_sbrk&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="215"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_stat&amp;#039; is never used." verbose="The function &amp;#039;_stat&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="272"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_times&amp;#039; is never used." verbose="The function &amp;#039;_times&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="281"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_unlink&amp;#039; is never used." verbose="The function &amp;#039;_unlink&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="289"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;_wait&amp;#039; is never used." verbose="The function &amp;#039;_wait&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/newlib_stubs.c" line="298"/>
        </error>
        <error id="asctimeCalled" severity="style" msg="Obsolete function &amp;#039;asctime&amp;#039; called. It is recommended to use &amp;#039;strftime&amp;#039; instead." verbose="Obsolete function &amp;#039;asctime&amp;#039; called. It is recommended to use &amp;#039;strftime&amp;#039; instead." cwe="477" file0="../../include/buildtracer/main.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/main.cpp" line="110"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;argv&amp;#039; can be declared with const" verbose="Parameter &amp;#039;argv&amp;#039; can be declared with const" cwe="398" file0="../../include/buildtracer/main.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/main.cpp" line="52"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;buildNumber&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;buildNumber&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/qmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qmain.cpp" line="63"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;argv&amp;#039; can be declared with const" verbose="Parameter &amp;#039;argv&amp;#039; can be declared with const" cwe="398" file0="../../include/buildtracer/qmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qmain.cpp" line="50"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;line&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;line&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="53"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;BuildNumFound&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;BuildNumFound&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="66"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;strposBuildNumHeader&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;strposBuildNumHeader&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="68"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;argv&amp;#039; can be declared with const" verbose="Parameter &amp;#039;argv&amp;#039; can be declared with const" cwe="398" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="51"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;BuildTimeFound&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;BuildTimeFound&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="67"/>
        </error>
        <error id="unusedVariable" severity="style" msg="Unused variable: strposBuildTimeHeader" verbose="Unused variable: strposBuildTimeHeader" cwe="563" file0="../../include/buildtracer/qvhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/qvhdmain.cpp" line="69"/>
        </error>
        <error id="asctimeCalled" severity="style" msg="Obsolete function &amp;#039;asctime&amp;#039; called. It is recommended to use &amp;#039;strftime&amp;#039; instead." verbose="Obsolete function &amp;#039;asctime&amp;#039; called. It is recommended to use &amp;#039;strftime&amp;#039; instead." cwe="477" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="139"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%ld in format string (no. 1) requires &amp;#039;long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." verbose="%ld in format string (no. 1) requires &amp;#039;long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." cwe="686" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="119"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;line&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;line&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="59"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;BuildNumFound&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;BuildNumFound&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="73"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;BuildTimeFound&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;BuildTimeFound&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="74"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;strposBuildNumHeader&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;strposBuildNumHeader&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="75"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;strposBuildTimeHeader&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;strposBuildTimeHeader&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="76"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;argv&amp;#039; can be declared with const" verbose="Parameter &amp;#039;argv&amp;#039; can be declared with const" cwe="398" file0="../../include/buildtracer/vhdmain.cpp" sinceDate="11/14/24">
            <location file="../../include/buildtracer/vhdmain.cpp" line="54"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="../../include/cgraph/CGraphDMHardwareInterface.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphDMHardwareInterface.cpp" line="62"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="../../include/cgraph/CGraphDMHardwareInterface.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphDMHardwareInterface.cpp" line="60"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="../../include/cgraph/CGraphDeprecatedPZTHardwareInterface.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphDeprecatedPZTHardwareInterface.cpp" line="63"/>
        </error>
        <error id="cstyleCast" severity="style" msg="C-style pointer casting" verbose="C-style pointer casting detected. C++ offers four different kinds of casts as replacements: static_cast, const_cast, dynamic_cast and reinterpret_cast. A C-style cast could evaluate to any of those automatically, thus it is considered safer if the programmer explicitly states which kind of cast is expected. See also: https://www.securecoding.cert.org/confluence/display/cplusplus/EXP05-CPP.+Do+not+use+C-style+casts." cwe="398" file0="../../include/cgraph/CGraphDeprecatedPZTHardwareInterface.cpp" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphDeprecatedPZTHardwareInterface.cpp" line="61"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;read&amp;#039; is never used." verbose="The function &amp;#039;read&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/cgraph/CGraphDeprecatedPZTHardwareInterface.cpp" line="113"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:&#10;&amp;#039;&amp;#039; : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;HAVE_PTHREAD_H;MW_PTHREADS : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MEMWATCH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MEMWATCH;strdup : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_FLUSH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_NOCPP : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_STDIO : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;SIGSEGV : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;UINT_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;ULLONG_MAX;ULONGLONG_MAX;ULONG_LONG_MAX;_UI64_MAX : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;ULONG_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;USHRT_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;WIN32 : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;WIN32;__WIN32__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;_MSC_VER : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__BORLANDC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__FLAT__;__WATCOMC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__STDC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__WATCOMC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;mwNew : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch.c:187] #error need CHAR_BIT to be 8!" file0="../../include/dbg/memwatch.c" sinceDate="11/14/24">
            <location file="../../include/dbg/memwatch.c" line="0"/>
        </error>
        <error id="preprocessorErrorDirective" severity="error" msg="failed to expand &amp;#039;mwFree&amp;#039;, Wrong number of parameters for macro &amp;#039;mwFree&amp;#039;." verbose="failed to expand &amp;#039;mwFree&amp;#039;, Wrong number of parameters for macro &amp;#039;mwFree&amp;#039;." sinceDate="11/14/24">
            <location file="../../include/dbg/memwatchcpp.cpp" line="166"/>
        </error>
        <error id="redundantInitialization" severity="style" msg="Redundant initialization for &amp;#039;dump_pnt&amp;#039;. The initialized value is overwritten before it is read." verbose="Redundant initialization for &amp;#039;dump_pnt&amp;#039;. The initialized value is overwritten before it is read." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/chunk.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="1116" info="dump_pnt is overwritten"/>
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="1008" info="dump_pnt is initialized"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &amp;#039;block_c &amp;gt; 0&amp;#039; is always false." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/chunk.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="3118" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="3000" info="&amp;#039;block_c&amp;#039; is assigned value &amp;#039;0&amp;#039; here."/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;adjust_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;adjust_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/chunk.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="545"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;dump_bottom_b&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;dump_bottom_b&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/chunk.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="1003"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;buf_p&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;buf_p&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/chunk.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/chunk.c" line="922"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%lu in format string (no. 2) requires &amp;#039;unsigned long&amp;#039; but the argument type is &amp;#039;signed long&amp;#039;." verbose="%lu in format string (no. 2) requires &amp;#039;unsigned long&amp;#039; but the argument type is &amp;#039;signed long&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="737"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;home_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;home_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="504"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;token&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;token&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="618"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;home_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;home_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="620"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;token&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;token&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="699"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;buf&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;buf&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc.c" line="865"/>
        </error>
        <error id="multiCondition" severity="style" msg="Expression is always false because &amp;#039;else if&amp;#039; condition matches previous condition at line 875." verbose="Expression is always false because &amp;#039;else if&amp;#039; condition matches previous condition at line 875." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="880"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;*arg_p==&amp;#039;B&amp;#039;&amp;#039; is always false" verbose="Condition &amp;#039;*arg_p==&amp;#039;B&amp;#039;&amp;#039; is always false" cwe="570" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1375"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;*arg_p==&amp;#039;B&amp;#039;&amp;#039; is always false" verbose="Condition &amp;#039;*arg_p==&amp;#039;B&amp;#039;&amp;#039; is always false" cwe="570" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1403"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;arg_p-&amp;gt;ar_short_arg!=&amp;#039;\0&amp;#039;&amp;#039; is always false" verbose="Condition &amp;#039;arg_p-&amp;gt;ar_short_arg!=&amp;#039;\0&amp;#039;&amp;#039; is always false" cwe="570" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1752" info="Condition &amp;#039;arg_p-&amp;gt;ar_short_arg!=&amp;#039;\0&amp;#039;&amp;#039; is always false"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1749" info="Assuming that condition &amp;#039;arg_p-&amp;gt;ar_short_arg==&amp;#039;\0&amp;#039;&amp;#039; is not redundant"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1217"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1808"/>
        </error>
        <error id="nullPointerRedundantCheck" severity="warning" msg="Either the condition &amp;#039;type_p==0L&amp;#039; is redundant or there is possible null pointer dereference: type_p." verbose="Either the condition &amp;#039;type_p==0L&amp;#039; is redundant or there is possible null pointer dereference: type_p." cwe="476" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1780" info="Null pointer dereference"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1807" info="Assuming that condition &amp;#039;type_p==0L&amp;#039; is not redundant"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and float * which have an incompatible binary data representation." verbose="Casting between signed char * and float * which have an incompatible binary data representation." cwe="704" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1331"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between signed char * and double * which have an incompatible binary data representation." verbose="Casting between signed char * and double * which have an incompatible binary data representation." cwe="704" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1335"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and float * which have an incompatible binary data representation." verbose="Casting between const signed char * and float * which have an incompatible binary data representation." cwe="704" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1556"/>
        </error>
        <error id="invalidPointerCast" severity="portability" msg="Casting between const signed char * and double * which have an incompatible binary data representation." verbose="Casting between const signed char * and double * which have an incompatible binary data representation." cwe="704" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1561"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;arr_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;arr_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1203"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;bit_c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;bit_c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1568"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;bit&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;bit&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1568"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;first_b&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;first_b&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1568"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;bin_bounds_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;bin_bounds_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1569"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;val_type&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;val_type&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1736"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;entry_c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;entry_c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1804"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;env_c&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;env_c&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="2851"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;tok_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;tok_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="2911"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;arr_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;arr_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3603"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;len&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;len&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3604"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;details&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;details&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3605"/>
        </error>
        <error id="shiftTooManyBitsSigned" severity="portability" msg="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour" verbose="Shifting signed 32-bit value by 31 bits is implementation-defined behaviour" cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1583"/>
        </error>
        <error id="integerOverflow" severity="error" msg="Signed integer overflow for expression &amp;#039;1&amp;lt;&amp;lt;bit_c&amp;#039;." verbose="Signed integer overflow for expression &amp;#039;1&amp;lt;&amp;lt;bit_c&amp;#039;." cwe="190" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="1583"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;argv_copy_args&amp;#039; is never used." verbose="The function &amp;#039;argv_copy_args&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3537"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;argv_entry_was_used&amp;#039; is never used." verbose="The function &amp;#039;argv_entry_was_used&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3445"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;argv_long_was_used&amp;#039; is never used." verbose="The function &amp;#039;argv_long_was_used&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3407"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;argv_type_info&amp;#039; is never used." verbose="The function &amp;#039;argv_type_info&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3666"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;argv_value_string&amp;#039; is never used." verbose="The function &amp;#039;argv_value_string&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_argv.c" line="3600"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;prev_errno&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;prev_errno&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_fc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_fc_t.c" line="1056"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="186"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="294"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="329"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="341"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 5) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 5) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="381"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 5) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 5) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="413"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." verbose="%d in format string (no. 4) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;ptrdiff_t {aka signed int}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="447"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="669"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="697"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2094"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2139"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2149"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3006"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3034"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3077"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3087"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3140"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3150"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3280"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3929"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3933"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3937"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3941"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3945"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3945"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3949"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3949"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3953"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3960"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3964"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 2) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3974"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%d in format string (no. 3) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="3974"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;dmalloc_errno&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;dmalloc_errno&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="1852" info="dmalloc_errno is overwritten"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="1842" info="dmalloc_errno is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;*((char*)pnt+64)&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;*((char*)pnt+64)&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2402" info="*((char*)pnt+64) is overwritten"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2351" info="*((char*)pnt+64) is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;*((char*)pnt+64)&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;*((char*)pnt+64)&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2494" info="*((char*)pnt+64) is overwritten"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2444" info="*((char*)pnt+64) is assigned"/>
        </error>
        <error id="redundantAssignment" severity="style" msg="Variable &amp;#039;ret&amp;#039; is reassigned a value before the old one has been used." verbose="Variable &amp;#039;ret&amp;#039; is reassigned a value before the old one has been used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2807" info="ret is overwritten"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2791" info="ret is assigned"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="578"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;new_pnt&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;new_pnt&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="654"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;loc_file&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;loc_file&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2204"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;loc_line&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;loc_line&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2205"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;ex_mark&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;ex_mark&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_t.c" line="2116"/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="100" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="101" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="102" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="103" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="103" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="104" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="104" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="105" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="105" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="106" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="106" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="107" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="107" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="108" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="108" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="109" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="109" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;file&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="110" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;file&amp;#039; value is lifetime=file"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="179" info="Address of variable taken here."/>
        </error>
        <error id="objectIndex" severity="error" msg="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." verbose="The address of local variable &amp;#039;line&amp;#039; is accessed at non-zero index." cwe="758" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="110" info=""/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Calling function &amp;#039;hash&amp;#039;, 1st argument &amp;#039;(unsigned char*)&amp;amp;line&amp;#039; value is lifetime=line"/>
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="184" info="Address of variable taken here."/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;char_temp&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;char_temp&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="264"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;pivot_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;pivot_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="350"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;width&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;width&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="353"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;size1&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;size1&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="353"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;size2&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;size2&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="353"/>
        </error>
        <error id="constParameter" severity="style" msg="Parameter &amp;#039;last_p&amp;#039; can be declared with const" verbose="Parameter &amp;#039;last_p&amp;#039; can be declared with const" cwe="398" file0="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmalloc_tab.c" line="297"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmallocc.cc" line="52"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmallocc.cc" line="64"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmallocc.cc" line="76"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; since the value of &amp;#039;DMALLOC_DEFAULT_FILE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/dmallocc.cc" line="87"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;colon_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;colon_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/env.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/env.c" line="114"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;hrs&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;hrs&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/error.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/error.c" line="449"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;mins&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;mins&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/error.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/error.c" line="449"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;log_p&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;log_p&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/error.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/error.c" line="504"/>
        </error>
        <error id="variableScope" severity="style" msg="The scope of the variable &amp;#039;diff&amp;#039; can be reduced." verbose="The scope of the variable &amp;#039;diff&amp;#039; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &amp;#039;i&amp;#039; can be reduced:&#10;void f(int x)&#10;{&#10;    int i = 0;&#10;    if (x) {&#10;        // it&amp;#039;s safe to move &amp;#039;int i = 0;&amp;#039; here&#10;        for (int n = 0; n &amp;lt; 10; ++n) {&#10;            // it is possible but not safe to move &amp;#039;int i = 0;&amp;#039; here&#10;            do_something(&amp;amp;i);&#10;        }&#10;    }&#10;}&#10;When you see this message it is always safe to reduce the variable scope 1 level." cwe="398" file0="../../include/dbg/dmalloc-5.5.2/heap.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/heap.c" line="188"/>
        </error>
        <error id="ConfigurationNotChecked" severity="information" msg="Skipping configuration &amp;#039;INTERNAL_MEMORY_SPACE&amp;#039; since the value of &amp;#039;INTERNAL_MEMORY_SPACE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." verbose="Skipping configuration &amp;#039;INTERNAL_MEMORY_SPACE&amp;#039; since the value of &amp;#039;INTERNAL_MEMORY_SPACE&amp;#039; is unknown. Use -D if you want to check it. You can use -U to skip it explicitly." sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/heap.c" line="84"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;size&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;size&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="761"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;new_size&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;new_size&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="865"/>
        </error>
        <error id="uninitvar" severity="error" msg="Uninitialized variable: size" verbose="Uninitialized variable: size" cwe="457" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1322"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ret&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ret&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1370"/>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &amp;#039;ret&amp;#039; is assigned a value that is never used." verbose="Variable &amp;#039;ret&amp;#039; is assigned a value that is never used." cwe="563" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1401"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;in_alloc_b&amp;#039; is always false" verbose="Condition &amp;#039;in_alloc_b&amp;#039; is always false" cwe="570" file0="../../include/dbg/dmalloc-5.5.2/malloc.c" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="630" info="Condition &amp;#039;in_alloc_b&amp;#039; is always false"/>
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="621" info="Assuming that condition &amp;#039;in_alloc_b&amp;#039; is not redundant"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;calloc&amp;#039; is never used." verbose="The function &amp;#039;calloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1105"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;cfree&amp;#039; is never used." verbose="The function &amp;#039;cfree&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1395"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;dmalloc_vmessage&amp;#039; is never used." verbose="The function &amp;#039;dmalloc_vmessage&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="2035"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;malloc_verify&amp;#039; is never used." verbose="The function &amp;#039;malloc_verify&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1476"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;memalign&amp;#039; is never used." verbose="The function &amp;#039;memalign&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1202"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;recalloc&amp;#039; is never used." verbose="The function &amp;#039;recalloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1169"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;strdup&amp;#039; is never used." verbose="The function &amp;#039;strdup&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1261"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;strndup&amp;#039; is never used." verbose="The function &amp;#039;strndup&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1310"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;valloc&amp;#039; is never used." verbose="The function &amp;#039;valloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/malloc.c" line="1232"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:&#10;&amp;#039;&amp;#039; : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;HAVE_PTHREAD_H;MW_PTHREADS : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MEMWATCH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MEMWATCH;strdup : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_FLUSH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_NOCPP : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;MW_STDIO : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;SIGSEGV : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;UINT_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;ULLONG_MAX;ULONGLONG_MAX;ULONG_LONG_MAX;_UI64_MAX : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;ULONG_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;USHRT_MAX=0xFFFFFFFFUL : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;WIN32 : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;WIN32;__WIN32__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;_MSC_VER : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__BORLANDC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__FLAT__;__WATCOMC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__STDC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;__WATCOMC__ : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!&#10;mwNew : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/memwatch.c:187] #error need CHAR_BIT to be 8!" file0="../../include/dbg/memwatch-2.71/memwatch.c" sinceDate="11/14/24">
            <location file="../../include/dbg/memwatch-2.71/memwatch.c" line="0"/>
        </error>
        <error id="noValidConfiguration" severity="information" msg="This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details." verbose="This file is not analyzed. Cppcheck failed to extract a valid configuration. The tested configurations have these preprocessor errors:&#10;&amp;#039;&amp;#039; : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/test.c:38] #error &amp;quot;You really, really don&amp;#039;t want to run this without memwatch. Trust me.&amp;quot;&#10;MEMWATCH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/test.c:42] #error &amp;quot;Define MW_STDIO and try again, please.&amp;quot;&#10;MEMWATCH;strdup : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/test.c:42] #error &amp;quot;Define MW_STDIO and try again, please.&amp;quot;&#10;MEMWATCH_STDIO;MW_STDIO : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/test.c:38] #error &amp;quot;You really, really don&amp;#039;t want to run this without memwatch. Trust me.&amp;quot;&#10;SIGSEGV;MEMWATCH : [/home/summer/projects/CGraph/firmware/include/dbg/memwatch-2.71/test.c:42] #error &amp;quot;Define MW_STDIO and try again, please.&amp;quot;" file0="../../include/dbg/memwatch-2.71/test.c" sinceDate="11/14/24">
            <location file="../../include/dbg/memwatch-2.71/test.c" line="0"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;!sign&amp;#039; is always true" verbose="Condition &amp;#039;!sign&amp;#039; is always true" cwe="571" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="364" info="Condition &amp;#039;!sign&amp;#039; is always true"/>
            <location file="../../include/format/src/format_fp.c" line="362" info="Assuming that condition &amp;#039;sign&amp;#039; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;!sign&amp;#039; is always true" verbose="Condition &amp;#039;!sign&amp;#039; is always true" cwe="571" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="366" info="Condition &amp;#039;!sign&amp;#039; is always true"/>
            <location file="../../include/format/src/format_fp.c" line="362" info="Assuming that condition &amp;#039;sign&amp;#039; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;!sign&amp;#039; is always true" verbose="Condition &amp;#039;!sign&amp;#039; is always true" cwe="571" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="581" info="Condition &amp;#039;!sign&amp;#039; is always true"/>
            <location file="../../include/format/src/format_fp.c" line="579" info="Assuming that condition &amp;#039;sign&amp;#039; is not redundant"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;!sign&amp;#039; is always true" verbose="Condition &amp;#039;!sign&amp;#039; is always true" cwe="571" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="583" info="Condition &amp;#039;!sign&amp;#039; is always true"/>
            <location file="../../include/format/src/format_fp.c" line="579" info="Assuming that condition &amp;#039;sign&amp;#039; is not redundant"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="189"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." verbose="%d in format string (no. 1) requires &amp;#039;int&amp;#039; but the argument type is &amp;#039;unsigned int&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="540"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="warning" msg="%lld in format string (no. 1) requires &amp;#039;long long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." verbose="%lld in format string (no. 1) requires &amp;#039;long long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="541"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="732"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="733"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="734"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="735"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="736"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="737"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="741"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="742"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="907"/>
        </error>
        <error id="invalidPrintfArgType_sint" severity="portability" msg="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." verbose="%zd in format string (no. 1) requires &amp;#039;ssize_t&amp;#039; but the argument type is &amp;#039;size_t {aka unsigned long}&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="908"/>
        </error>
        <error id="invalidPrintfArgType_uint" severity="warning" msg="%llu in format string (no. 1) requires &amp;#039;unsigned long long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." verbose="%llu in format string (no. 1) requires &amp;#039;unsigned long long&amp;#039; but the argument type is &amp;#039;unsigned long&amp;#039;." cwe="686" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format_fp.c" line="949"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="The comparison &amp;#039;sizeof(int*) &amp;gt; sizeof(int)&amp;#039; is always false because &amp;#039;sizeof(int*)&amp;#039; and &amp;#039;sizeof(int)&amp;#039; represent the same value." verbose="Finding the same expression on both sides of an operator is suspicious and might indicate a cut and paste or logic error. Please examine this code carefully to determine if it is correct." cwe="398" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="950"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;p&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;p&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="1219"/>
        </error>
        <error id="unsignedLessThanZero" severity="style" msg="Checking if unsigned expression &amp;#039;q&amp;#039; is less than zero." verbose="The unsigned expression &amp;#039;q&amp;#039; will never be negative so it is either pointless or an error to check if it is." cwe="570" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="1242"/>
        </error>
        <error id="integerOverflowCond" severity="warning" msg="Either the condition &amp;#039;&amp;#039;0&amp;#039;&amp;lt;=(grp)&amp;#039; is redundant or there is signed integer overflow for expression &amp;#039;grp-&amp;#039;0&amp;#039;&amp;#039;." verbose="Either the condition &amp;#039;&amp;#039;0&amp;#039;&amp;lt;=(grp)&amp;#039; is redundant or there is signed integer overflow for expression &amp;#039;grp-&amp;#039;0&amp;#039;&amp;#039;." cwe="190" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="831" info="Integer overflow"/>
            <location file="../../include/format/src/format.c" line="828" info="Assuming that condition &amp;#039;&amp;#039;0&amp;#039;&amp;lt;=(grp)&amp;#039; is not redundant"/>
        </error>
        <error id="signConversionCond" severity="warning" msg="Expression &amp;#039;grp-&amp;#039;0&amp;#039;&amp;#039; can have a negative value. That is converted to an unsigned value and used in an unsigned calculation." verbose="Expression &amp;#039;grp-&amp;#039;0&amp;#039;&amp;#039; can have a negative value. That is converted to an unsigned value and used in an unsigned calculation." cwe="195" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="831" info="Negative value is converted to an unsigned value"/>
            <location file="../../include/format/src/format.c" line="828" info="Assuming that condition &amp;#039;&amp;#039;0&amp;#039;&amp;lt;=(grp)&amp;#039; is not redundant"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;vp&amp;#039; is of type &amp;#039;const void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;vp&amp;#039; is of type &amp;#039;const void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="588"/>
        </error>
        <error id="arithOperationsOnVoidPointer" severity="portability" msg="&amp;#039;ptr&amp;#039; is of type &amp;#039;const void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined." verbose="&amp;#039;ptr&amp;#039; is of type &amp;#039;const void *&amp;#039;. When using void pointers in calculations, the behaviour is undefined. Arithmetic operations on &amp;#039;void *&amp;#039; is a GNU C extension, which defines the &amp;#039;sizeof(void)&amp;#039; to be 1." cwe="467" file0="../../include/format/src/format.c" sinceDate="11/14/24">
            <location file="../../include/format/src/format.c" line="1068"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;ptr_size==2&amp;#039; is always false" verbose="Condition &amp;#039;ptr_size==2&amp;#039; is always false" cwe="570" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="350" info="Condition &amp;#039;ptr_size==2&amp;#039; is always false"/>
            <location file="../../include/format/test/testharness.c" line="343" info="Assignment &amp;#039;ptr_size=sizeof(int*)&amp;#039;, assigned value is 8"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;ptr_size==4&amp;#039; is always false" verbose="Condition &amp;#039;ptr_size==4&amp;#039; is always false" cwe="570" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="360" info="Condition &amp;#039;ptr_size==4&amp;#039; is always false"/>
            <location file="../../include/format/test/testharness.c" line="343" info="Assignment &amp;#039;ptr_size=sizeof(int*)&amp;#039;, assigned value is 8"/>
        </error>
        <error id="knownConditionTrueFalse" severity="style" msg="Condition &amp;#039;ptr_size==8&amp;#039; is always true" verbose="Condition &amp;#039;ptr_size==8&amp;#039; is always true" cwe="571" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="370" info="Condition &amp;#039;ptr_size==8&amp;#039; is always true"/>
            <location file="../../include/format/test/testharness.c" line="343" info="Assignment &amp;#039;ptr_size=sizeof(int*)&amp;#039;, assigned value is 8"/>
        </error>
        <error id="varFuncNullUB" severity="portability" msg="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour." verbose="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour.&#10;The C99 standard, in section 7.15.1.1, states that if the type used by va_arg() is not compatible with the type of the actual next argument (as promoted according to the default argument promotions), the behavior is undefined.&#10;The value of the NULL macro is an implementation-defined null pointer constant (7.17), which can be any integer constant expression with the value 0, or such an expression casted to (void*) (6.3.2.3). This includes values like 0, 0L, or even 0LL.&#10;In practice on common architectures, this will cause real crashes if sizeof(int) != sizeof(void*), and NULL is defined to 0 or any other null pointer constant that promotes to int.&#10;To reproduce you might be able to use this little code example on 64bit platforms. If the output includes &amp;quot;ERROR&amp;quot;, the sentinel had only 4 out of 8 bytes initialized to zero and was not detected as the final argument to stop argument processing via va_arg(). Changing the 0 to (void*)0 or 0L will make the &amp;quot;ERROR&amp;quot; output go away.&#10;#include &amp;lt;stdarg.h&amp;gt;&#10;#include &amp;lt;stdio.h&amp;gt;&#10;&#10;void f(char *s, ...) {&#10;    va_list ap;&#10;    va_start(ap,s);&#10;    for (;;) {&#10;        char *p = va_arg(ap,char*);&#10;        printf(&amp;quot;%018p, %s\n&amp;quot;, p, (long)p &amp;amp; 255 ? p : &amp;quot;&amp;quot;);&#10;        if(!p) break;&#10;    }&#10;    va_end(ap);&#10;}&#10;&#10;void g() {&#10;    char *s2 = &amp;quot;x&amp;quot;;&#10;    char *s3 = &amp;quot;ERROR&amp;quot;;&#10;&#10;    // changing 0 to 0L for the 7th argument (which is intended to act as sentinel) makes the error go away on x86_64&#10;    f(&amp;quot;first&amp;quot;, s2, s2, s2, s2, s2, 0, s3, (char*)0);&#10;}&#10;&#10;void h() {&#10;    int i;&#10;    volatile unsigned char a[1000];&#10;    for (i = 0; i&amp;lt;sizeof(a); i++)&#10;        a[i] = -1;&#10;}&#10;&#10;int main() {&#10;    h();&#10;    g();&#10;    return 0;&#10;}" cwe="475" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="287"/>
        </error>
        <error id="varFuncNullUB" severity="portability" msg="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour." verbose="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour.&#10;The C99 standard, in section 7.15.1.1, states that if the type used by va_arg() is not compatible with the type of the actual next argument (as promoted according to the default argument promotions), the behavior is undefined.&#10;The value of the NULL macro is an implementation-defined null pointer constant (7.17), which can be any integer constant expression with the value 0, or such an expression casted to (void*) (6.3.2.3). This includes values like 0, 0L, or even 0LL.&#10;In practice on common architectures, this will cause real crashes if sizeof(int) != sizeof(void*), and NULL is defined to 0 or any other null pointer constant that promotes to int.&#10;To reproduce you might be able to use this little code example on 64bit platforms. If the output includes &amp;quot;ERROR&amp;quot;, the sentinel had only 4 out of 8 bytes initialized to zero and was not detected as the final argument to stop argument processing via va_arg(). Changing the 0 to (void*)0 or 0L will make the &amp;quot;ERROR&amp;quot; output go away.&#10;#include &amp;lt;stdarg.h&amp;gt;&#10;#include &amp;lt;stdio.h&amp;gt;&#10;&#10;void f(char *s, ...) {&#10;    va_list ap;&#10;    va_start(ap,s);&#10;    for (;;) {&#10;        char *p = va_arg(ap,char*);&#10;        printf(&amp;quot;%018p, %s\n&amp;quot;, p, (long)p &amp;amp; 255 ? p : &amp;quot;&amp;quot;);&#10;        if(!p) break;&#10;    }&#10;    va_end(ap);&#10;}&#10;&#10;void g() {&#10;    char *s2 = &amp;quot;x&amp;quot;;&#10;    char *s3 = &amp;quot;ERROR&amp;quot;;&#10;&#10;    // changing 0 to 0L for the 7th argument (which is intended to act as sentinel) makes the error go away on x86_64&#10;    f(&amp;quot;first&amp;quot;, s2, s2, s2, s2, s2, 0, s3, (char*)0);&#10;}&#10;&#10;void h() {&#10;    int i;&#10;    volatile unsigned char a[1000];&#10;    for (i = 0; i&amp;lt;sizeof(a); i++)&#10;        a[i] = -1;&#10;}&#10;&#10;int main() {&#10;    h();&#10;    g();&#10;    return 0;&#10;}" cwe="475" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="288"/>
        </error>
        <error id="varFuncNullUB" severity="portability" msg="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour." verbose="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour.&#10;The C99 standard, in section 7.15.1.1, states that if the type used by va_arg() is not compatible with the type of the actual next argument (as promoted according to the default argument promotions), the behavior is undefined.&#10;The value of the NULL macro is an implementation-defined null pointer constant (7.17), which can be any integer constant expression with the value 0, or such an expression casted to (void*) (6.3.2.3). This includes values like 0, 0L, or even 0LL.&#10;In practice on common architectures, this will cause real crashes if sizeof(int) != sizeof(void*), and NULL is defined to 0 or any other null pointer constant that promotes to int.&#10;To reproduce you might be able to use this little code example on 64bit platforms. If the output includes &amp;quot;ERROR&amp;quot;, the sentinel had only 4 out of 8 bytes initialized to zero and was not detected as the final argument to stop argument processing via va_arg(). Changing the 0 to (void*)0 or 0L will make the &amp;quot;ERROR&amp;quot; output go away.&#10;#include &amp;lt;stdarg.h&amp;gt;&#10;#include &amp;lt;stdio.h&amp;gt;&#10;&#10;void f(char *s, ...) {&#10;    va_list ap;&#10;    va_start(ap,s);&#10;    for (;;) {&#10;        char *p = va_arg(ap,char*);&#10;        printf(&amp;quot;%018p, %s\n&amp;quot;, p, (long)p &amp;amp; 255 ? p : &amp;quot;&amp;quot;);&#10;        if(!p) break;&#10;    }&#10;    va_end(ap);&#10;}&#10;&#10;void g() {&#10;    char *s2 = &amp;quot;x&amp;quot;;&#10;    char *s3 = &amp;quot;ERROR&amp;quot;;&#10;&#10;    // changing 0 to 0L for the 7th argument (which is intended to act as sentinel) makes the error go away on x86_64&#10;    f(&amp;quot;first&amp;quot;, s2, s2, s2, s2, s2, 0, s3, (char*)0);&#10;}&#10;&#10;void h() {&#10;    int i;&#10;    volatile unsigned char a[1000];&#10;    for (i = 0; i&amp;lt;sizeof(a); i++)&#10;        a[i] = -1;&#10;}&#10;&#10;int main() {&#10;    h();&#10;    g();&#10;    return 0;&#10;}" cwe="475" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="289"/>
        </error>
        <error id="varFuncNullUB" severity="portability" msg="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour." verbose="Passing NULL after the last typed argument to a variadic function leads to undefined behaviour.&#10;The C99 standard, in section 7.15.1.1, states that if the type used by va_arg() is not compatible with the type of the actual next argument (as promoted according to the default argument promotions), the behavior is undefined.&#10;The value of the NULL macro is an implementation-defined null pointer constant (7.17), which can be any integer constant expression with the value 0, or such an expression casted to (void*) (6.3.2.3). This includes values like 0, 0L, or even 0LL.&#10;In practice on common architectures, this will cause real crashes if sizeof(int) != sizeof(void*), and NULL is defined to 0 or any other null pointer constant that promotes to int.&#10;To reproduce you might be able to use this little code example on 64bit platforms. If the output includes &amp;quot;ERROR&amp;quot;, the sentinel had only 4 out of 8 bytes initialized to zero and was not detected as the final argument to stop argument processing via va_arg(). Changing the 0 to (void*)0 or 0L will make the &amp;quot;ERROR&amp;quot; output go away.&#10;#include &amp;lt;stdarg.h&amp;gt;&#10;#include &amp;lt;stdio.h&amp;gt;&#10;&#10;void f(char *s, ...) {&#10;    va_list ap;&#10;    va_start(ap,s);&#10;    for (;;) {&#10;        char *p = va_arg(ap,char*);&#10;        printf(&amp;quot;%018p, %s\n&amp;quot;, p, (long)p &amp;amp; 255 ? p : &amp;quot;&amp;quot;);&#10;        if(!p) break;&#10;    }&#10;    va_end(ap);&#10;}&#10;&#10;void g() {&#10;    char *s2 = &amp;quot;x&amp;quot;;&#10;    char *s3 = &amp;quot;ERROR&amp;quot;;&#10;&#10;    // changing 0 to 0L for the 7th argument (which is intended to act as sentinel) makes the error go away on x86_64&#10;    f(&amp;quot;first&amp;quot;, s2, s2, s2, s2, s2, 0, s3, (char*)0);&#10;}&#10;&#10;void h() {&#10;    int i;&#10;    volatile unsigned char a[1000];&#10;    for (i = 0; i&amp;lt;sizeof(a); i++)&#10;        a[i] = -1;&#10;}&#10;&#10;int main() {&#10;    h();&#10;    g();&#10;    return 0;&#10;}" cwe="475" file0="../../include/format/test/testharness.c" sinceDate="11/14/24">
            <location file="../../include/format/test/testharness.c" line="320"/>
        </error>
        <error id="unknownMacro" severity="error" msg="There is an unknown macro here somewhere. Configuration is required. If HAL_ASSERT is a macro then please configure it." verbose="There is an unknown macro here somewhere. Configuration is required. If HAL_ASSERT is a macro then please configure it." file0="../../include/uart/CoreUARTapb/core_uart_apb.c" sinceDate="11/14/24">
            <location file="../../include/uart/CoreUARTapb/core_uart_apb.c" line="48"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;ComBlk_IRQHandler&amp;#039; is never used." verbose="The function &amp;#039;ComBlk_IRQHandler&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/mss_comblk.c" line="359"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;ParseConfigFile&amp;#039; is never used." verbose="The function &amp;#039;ParseConfigFile&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/uart/AsciiCmdUserInterfaceLinux.cpp" line="155"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;ProcessUserInterface&amp;#039; is never used." verbose="The function &amp;#039;ProcessUserInterface&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/uart/AsciiCmdUserInterfaceLinux.cpp" line="88"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;StartUserInterface&amp;#039; is never used." verbose="The function &amp;#039;StartUserInterface&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/uart/AsciiCmdUserInterfaceLinux.cpp" line="70"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;strupr&amp;#039; is never used." verbose="The function &amp;#039;strupr&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/uart/AsciiCmdUserInterfaceLinux.cpp" line="142"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;SystemCoreClockUpdate&amp;#039; is never used." verbose="The function &amp;#039;SystemCoreClockUpdate&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/system_m2sxxx.c" line="557"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;SystemInit&amp;#039; is never used." verbose="The function &amp;#039;SystemInit&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/system_m2sxxx.c" line="432"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;XtCalloc&amp;#039; is never used." verbose="The function &amp;#039;XtCalloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/contrib/Xmalloc.c" line="55"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;XtFree&amp;#039; is never used." verbose="The function &amp;#039;XtFree&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/contrib/Xmalloc.c" line="44"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;XtMalloc&amp;#039; is never used." verbose="The function &amp;#039;XtMalloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/contrib/Xmalloc.c" line="30"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;XtRealloc&amp;#039; is never used." verbose="The function &amp;#039;XtRealloc&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/dbg/dmalloc-5.5.2/contrib/Xmalloc.c" line="73"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;delays&amp;#039; is never used." verbose="The function &amp;#039;delays&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/arm/smartfusion/DelayLoops.c" line="32"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;fformatf&amp;#039; is never used." verbose="The function &amp;#039;fformatf&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/format/formatf_stdio.cpp" line="51"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;snformatf&amp;#039; is never used." verbose="The function &amp;#039;snformatf&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/format/formatf_stdio.cpp" line="38"/>
        </error>
        <error id="unusedFunction" severity="style" msg="The function &amp;#039;snprintf&amp;#039; is never used." verbose="The function &amp;#039;snprintf&amp;#039; is never used." cwe="561" sinceDate="11/14/24">
            <location file="../../include/format/lib/snprintf.c" line="135"/>
        </error>
    </errors>
</results>
